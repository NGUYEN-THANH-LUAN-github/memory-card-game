{"version":3,"sources":["components/Footer.js","utils/breaking_bad_api.js","utils/Holly_White.jpg","components/Card.js","components/CardList.js","components/Playing.js","components/IntroEnd.js","components/Main.js","utils/shuffleArray.js","App.js","utils/background.jpg","index.js"],"names":["Footer","FooterWrapper","target","href","rel","className","styled","footer","getRndChars","a","fetch","response","json","rnd_chars","forEach","char","push","id","uuid","name","nickname","img","clicked","Card","toggleClicked","CardWrapper","onClick","src","Holly_White","alt","blink","keyframes","figure","CardList","charList","renderCard","map","CardListWrapper","div","Playing","score","Wrapper","current","best","IntroEnd","heading","info","game","startGame","replay","returnToMain","button","width","props","Main","useState","setCharList","setGame","setScore","useEffect","shuffleCards","shuffled","array","i","length","j","Math","floor","random","shuffleArray","find","App","GlobalStyle","createGlobalStyle","bg","ReactDOM","render","StrictMode","background","document","getElementById"],"mappings":"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","file":"static/js/main.2eca99ef.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport default function Footer() {\r\n return (\r\n  <FooterWrapper>\r\n   made by n.t.luan\r\n   <a\r\n    target='_blank'\r\n    href='https://github.com/NGUYEN-THANH-LUAN-github/memory-card-game'\r\n    rel='noreferrer'\r\n   >\r\n    <i className='fab fa-github text'></i>\r\n   </a>\r\n  </FooterWrapper>\r\n )\r\n}\r\n\r\nconst FooterWrapper = styled.footer`\r\n position: absolute;\r\n bottom: 0;\r\n width: 100%;\r\n padding-block: 0.5em;\r\n color: #eee;\r\n font-weight: bold;\r\n text-align: center;\r\n i {\r\n  color: #eee;\r\n  transition: all ease 0.3s;\r\n  margin-left: 0.6em;\r\n  &:hover {\r\n   transform: translateY(-0.1em);\r\n   text-shadow: 0px 0px 5px white;\r\n  }\r\n }\r\n`\r\n","import { v4 as uuid } from 'uuid'\r\n\r\nexport default async function getRndChars() {\r\n  const response = await fetch(\r\n    'https://www.breakingbadapi.com/api/character/random?limit=12'\r\n  )\r\n  const json = await response.json()\r\n  const rnd_chars = []\r\n  json.forEach(char => {\r\n    rnd_chars.push({\r\n      id: uuid(),\r\n      name: char.name,\r\n      nickname: char.nickname,\r\n      img: char.img,\r\n      clicked: false,\r\n    })\r\n  })\r\n  return rnd_chars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Holly_White.cacfd021.jpg\";","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Holly_White from '../utils/Holly_White.jpg'\r\n\r\nexport default function Card({ char, toggleClicked }) {\r\n  const handleClick = () => {\r\n    toggleClicked(char.id)\r\n  }\r\n  return (\r\n    <CardWrapper onClick={handleClick}>\r\n      <img\r\n        src={char.name === 'Holly White' ? Holly_White : char.img}\r\n        alt={char.name}\r\n      />\r\n      <figcaption>\r\n        {char.name}\r\n        <small> ({char.nickname})</small>\r\n      </figcaption>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nconst blink = keyframes`\r\n\t\t0% {}\r\n\t\t100% {\r\n\t\t\ttext-shadow: 0 0 4px white, 0 0 12px #0ba9ca;\r\n\t\t}\r\n\t`\r\n\r\nconst CardWrapper = styled.figure`\r\n  position: relative;\r\n  width: 200px;\r\n  aspect-ratio: 3/4;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0px 0px 20px white;\r\n    img {\r\n      transform: scale(1.1);\r\n      opacity: 0.9;\r\n    }\r\n    figcaption {\r\n      visibility: visible;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: 0.2s ease-in;\r\n  }\r\n  figcaption {\r\n    visibility: hidden;\r\n    transition: 0.2s ease-in;\r\n    animation: ${blink} 0.7s infinite alternate;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    text-shadow: -1px -1px #000, 1px -1px #000, -1px 1px #000, 1px 1px #000;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n  }\r\n`\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport styled from 'styled-components'\r\n\r\nexport default function CardList({ charList, toggleClicked }) {\r\n  const renderCard = charList.map(char => (\r\n    <Card key={char.id} char={char} toggleClicked={toggleClicked} />\r\n  ))\r\n  return <CardListWrapper>{renderCard}</CardListWrapper>\r\n}\r\n\r\nconst CardListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-row-gap: 25px;\r\n  justify-items: center;\r\n  @media (max-width: 1500px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n  @media (max-width: 1050px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n  @media (max-width: 820px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (max-width: 530px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`\r\n","import React from 'react'\r\nimport CardList from './CardList'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Playing({\r\n  charList,\r\n  score,\r\n  toggleClicked,\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <h1>\r\n        <span className='current'>Score: {score.current}</span>/\r\n        <span className='best'>Best: {score.best}</span>\r\n      </h1>\r\n      <CardList\r\n        charList={charList}\r\n        toggleClicked={toggleClicked}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  h1 {\r\n    color: white;\r\n    text-align: center;\r\n    padding-block: 3rem;\r\n    @media (max-width: 530px) {\r\n      font-size: 1.4em;\r\n    }\r\n    .current {\r\n      margin-right: 1.5rem;\r\n    }\r\n    .best {\r\n      margin-left: 1.5rem;\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function IntroEnd({\r\n  game,\r\n  score,\r\n  startGame,\r\n  replay,\r\n  returnToMain,\r\n}) {\r\n  let heading,\r\n    info,\r\n    button = ''\r\n  if (game === 'intro') {\r\n    heading = 'BB Memory Game'\r\n    info = (\r\n      <div className='info'>\r\n        <ul>\r\n          <li>\r\n            1. You will be presented with 12 cards of 12 different Breaking Bad\r\n            characters\r\n          </li>\r\n          <li>2. Click on any card, and the cards will be re-shuffled</li>\r\n          <li>\r\n            3. Choose another card, but you must not choose the card that has\r\n            already been chosen\r\n          </li>\r\n          <li>4. You win the game if you manage to click on each card once</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n    button = <button onClick={startGame}>Start Game!</button>\r\n  } else {\r\n    if (game === 'lost') {\r\n      heading = 'Game Over :('\r\n      info = (\r\n        <div className='info'>\r\n          <h3>\r\n            <div className='current'>Your score: {score.current}</div>\r\n            <div>Best: {score.best}</div>\r\n          </h3>\r\n        </div>\r\n      )\r\n      button = (\r\n        <div>\r\n          <button onClick={replay}>Play Again!</button>\r\n          <button onClick={returnToMain}>Quit</button>\r\n        </div>\r\n      )\r\n    } else {\r\n      heading = 'Congratulations! You Won!'\r\n      info = (\r\n        <div className='info'>\r\n          <img\r\n            src={'https://media.giphy.com/media/vyNg5hVvHLzCE/giphy.gif'}\r\n            width={400}\r\n            alt=''\r\n          ></img>\r\n        </div>\r\n      )\r\n      button = <button onClick={returnToMain}>Return to Main</button>\r\n    }\r\n  }\r\n  return (\r\n    <Wrapper game={game}>\r\n      <h1>{heading}</h1>\r\n      {info}\r\n      {button}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-inline: 5rem;\r\n  padding: 2rem;\r\n  color: white;\r\n  text-align: center;\r\n  text-shadow: -1px -1px 20px #000, 1px -1px 20px #000, -1px 1px 20px #000;\r\n  h1 {\r\n    font-size: 2.5em;\r\n    padding-bottom: ${props => props.game === 'won' && '1.5rem'};\r\n  }\r\n  .info {\r\n    margin-top: 1.5rem;\r\n    h3 {\r\n      margin-bottom: 20px;\r\n      .current {\r\n        padding-bottom: 8px;\r\n      }\r\n    }\r\n    li {\r\n      line-height: 1.5;\r\n      list-style: none;\r\n    }\r\n    img {\r\n      box-shadow: -1px -1px 16px #fff, 1px -1px 16px #fff, -1px 1px 16px #fff;\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 20px;\r\n    margin-inline: 15px;\r\n    color: inherit;\r\n    font-size: 1.5em;\r\n    background: none;\r\n    padding: 5px 25px;\r\n    border: 1px white solid;\r\n    box-shadow: -1px -1px 6px #000, 1px -1px 6px #000, -1px 1px 6px #000;\r\n    text-shadow: inherit;\r\n    &:hover {\r\n      background: rgb(255, 255, 255, 0.4);\r\n      cursor: pointer;\r\n    }\r\n    &:active {\r\n      font-size: 1.485em;\r\n    }\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport getRndChars from '../utils/breaking_bad_api'\r\nimport shuffleArray from '../utils/shuffleArray'\r\nimport styled from 'styled-components'\r\nimport Playing from './Playing'\r\nimport IntroEnd from './IntroEnd'\r\n\r\nexport default function Main() {\r\n  const [charList, setCharList] = useState([])\r\n  const [game, setGame] = useState('intro')\r\n  const [score, setScore] = useState({ current: 0, best: 0 })\r\n\r\n  useEffect(() => {\r\n    if (game === 'playing') {\r\n      ;(async () => {\r\n        setCharList(await getRndChars())\r\n      })()\r\n    }\r\n  }, [game])\r\n\r\n  useEffect(() => {\r\n    if (score.current === 12) setGame('won')\r\n  }, [score])\r\n\r\n  const startGame = () => {\r\n    setGame('playing')\r\n    setScore({ ...score, current: 0 })\r\n  }\r\n\r\n  const shuffleCards = () => {\r\n    const shuffled = [...charList]\r\n    shuffleArray(shuffled)\r\n    setCharList(shuffled)\r\n  }\r\n\r\n  const toggleClicked = id => {\r\n    const char = charList.find(char => char.id === id)\r\n    if (!char.clicked) {\r\n      setCharList(charList =>\r\n        charList.map(char => (char.id === id ? (char.clicked = true) : char))\r\n      )\r\n      shuffleCards()\r\n      setScore({ ...score, current: score.current + 1 })\r\n\r\n      return\r\n    } else {\r\n      setGame('lost')\r\n      if (score.best < score.current) {\r\n        setScore({ ...score, best: score.current })\r\n      }\r\n    }\r\n  }\r\n\r\n  const replay = () => {\r\n    setScore({ ...score, current: 0 })\r\n    setGame('playing')\r\n  }\r\n\r\n  const returnToMain = () => {\r\n    setScore({ current: 0, best: 0 })\r\n    setGame('intro')\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {game === 'playing' ? (\r\n        <Playing\r\n          charList={charList}\r\n          score={score}\r\n          toggleClicked={toggleClicked}\r\n        />\r\n      ) : (\r\n        <IntroEnd\r\n          game={game}\r\n          score={score}\r\n          startGame={startGame}\r\n          replay={replay}\r\n          returnToMain={returnToMain}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  padding-bottom: 5rem;\r\n`\r\n","export default function shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n}\r\n","import styled from 'styled-components'\nimport Footer from './components/Footer'\nimport Main from './components/Main'\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Main />\n      <Footer />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n","export default __webpack_public_path__ + \"static/media/background.954005f7.jpg\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createGlobalStyle } from 'styled-components'\nimport background from './utils/background.jpg'\n\nconst GlobalStyle = createGlobalStyle`\n    *, *::before, *::after {\n      box-sizing: border-box;\n      padding: 0;\n      margin: 0;\n      word-wrap: break-word;\n    };\n   body {\n      background: url(${props => props.bg});\n      background-attachment: fixed;\n      background-position: center;\n      background-size: cover;\n      font-family: Verdana, Geneva, Tahoma, sans-serif;\n    }\n  `\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle bg={background} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}